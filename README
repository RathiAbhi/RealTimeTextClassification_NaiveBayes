Disclaimer: This project is just for demonstration and educational purposes. The code might not be entirely correcr.

A python/ML project that classifies real-time coming data into certain buckets via text classification.
The project makes use of a Naive-Bayes Classifier.

Project Structure:
│── main.py                  # Main script to orchestrate everything
│── data_fetcher.py          # Fetches data from MongoDB/JSON
│── kafka_producer.py        # Publishes scraped data to Kafka
│── kafka_consumer.py        # Reads data from Kafka & sends it to OpenAI
│── text_summarizer.py       # Summarizes text using OpenAI API
│── text_classifier.py       # Trains & runs Naïve Bayes classifier
│── model_evaluation.py      # Evaluates model & plots visualization
│── config.py                # Configurations (API keys, MongoDB, Kafka)

How to run:
1. Start Kafka
bin/zookeeper-server-start.sh config/zookeeper.properties
bin/kafka-server-start.sh config/server.properties

2. Run Kafka Producer (Streams data)
python kafka_producer.py

3. Run Kafka Consumer (Processes data and classifies)
python kafka_consumer.py

4. Evaluate model (visualize results)
python model_evaluation.py